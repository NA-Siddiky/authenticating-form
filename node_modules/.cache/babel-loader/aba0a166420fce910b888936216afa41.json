{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web-Development\\\\React\\\\Recap Modules\\\\recap-authentacation\\\\src\\\\App.js\";\nimport './App.css';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport firebaseConfig from './firebase.config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfirebase.initializeApp(firebaseConfig);\n\nfunction App() {\n  var provider = new firebase.auth.GoogleAuthProvider();\n\n  const handleGoogleSignIn = () => {\n    firebase.auth().signInWithPopup(provider).then(result => {\n      /** @type {firebase.auth.OAuthCredential} */\n      var credential = result.credential; // This gives you a Google Access Token. You can use it to access the Google API.\n\n      var token = credential.accessToken; // The signed-in user info.\n\n      var user = result.user;\n      console.log(user);\n    }).catch(error => {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message; // The email of the user's account used.\n\n      var email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n      var credential = error.credential; // ...\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoogleSignIn,\n      children: \"Sign in using google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Web-Development/React/Recap Modules/recap-authentacation/src/App.js"],"names":["firebase","firebaseConfig","initializeApp","App","provider","auth","GoogleAuthProvider","handleGoogleSignIn","signInWithPopup","then","result","credential","token","accessToken","user","console","log","catch","error","errorCode","code","errorMessage","message","email"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAOC,cAAP,MAA2B,mBAA3B;;AAEAD,QAAQ,CAACE,aAAT,CAAuBD,cAAvB;;AAEA,SAASE,GAAT,GAAe;AACb,MAAIC,QAAQ,GAAG,IAAIJ,QAAQ,CAACK,IAAT,CAAcC,kBAAlB,EAAf;;AACA,QAAMC,kBAAkB,GAAG,MAAM;AAC/BP,IAAAA,QAAQ,CACLK,IADH,GAEGG,eAFH,CAEmBJ,QAFnB,EAGGK,IAHH,CAGSC,MAAD,IAAY;AAChB;AACA,UAAIC,UAAU,GAAGD,MAAM,CAACC,UAAxB,CAFgB,CAIhB;;AACA,UAAIC,KAAK,GAAGD,UAAU,CAACE,WAAvB,CALgB,CAMhB;;AACA,UAAIC,IAAI,GAAGJ,MAAM,CAACI,IAAlB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,KAbH,EAaKG,KAbL,CAaYC,KAAD,IAAW;AAClB;AACA,UAAIC,SAAS,GAAGD,KAAK,CAACE,IAAtB;AACA,UAAIC,YAAY,GAAGH,KAAK,CAACI,OAAzB,CAHkB,CAIlB;;AACA,UAAIC,KAAK,GAAGL,KAAK,CAACK,KAAlB,CALkB,CAMlB;;AACA,UAAIZ,UAAU,GAAGO,KAAK,CAACP,UAAvB,CAPkB,CAQlB;AACD,KAtBH;AAyBD,GA1BD;;AA2BA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,OAAO,EAAEJ,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;KAnCQJ,G;AAqCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport firebaseConfig from './firebase.config';\n\nfirebase.initializeApp(firebaseConfig);\n\nfunction App() {\n  var provider = new firebase.auth.GoogleAuthProvider();\n  const handleGoogleSignIn = () => {\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then((result) => {\n        /** @type {firebase.auth.OAuthCredential} */\n        var credential = result.credential;\n\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        var token = credential.accessToken;\n        // The signed-in user info.\n        var user = result.user;\n        \n        console.log(user);\n      }).catch((error) => {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        // The email of the user's account used.\n        var email = error.email;\n        // The firebase.auth.AuthCredential type that was used.\n        var credential = error.credential;\n        // ...\n      });\n\n\n  };\n  return (\n    <div className=\"App\">\n      <button onClick={handleGoogleSignIn}>Sign in using google</button>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}